{"version":3,"sources":["fb.js","stringCount.js","key.js","scale.js","stringSet.js","chords.js","App.js","index.js"],"names":["renderFretboard","stringCount","stringSet","keyName","scaleName","triads","sevenths","tuning","slice","Math","abs","notes","Set","Object","values","flat","f","Fretboard","el","fretCount","dotText","note","interval","dotFill","includes","Number","scale","FretboardSystem","getScale","type","root","setDots","filter","s","string","render","StringCount","props","Col","xs","options","value","defaultOption","onChange","placeholder","Key","useState","flats","setFlats","className","checked","style","marginRight","Scale","ScaleType","all","map","scaleType","name","sort","items","label","propagateOnChange","checkboxes","document","querySelectorAll","i","length","push","boxes","textAlign","display","Chords","onTriadChange","onSeventhChange","chord","obj","Table","striped","bordered","hover","modeNames","get","triadNotes","e","seventhNotes","triad","Chord","detect","seventh","keys","join","initialState","reducer","state","action","payload","undefined","Error","App","useReducer","dispatch","useEffect","getElementById","fretboard","createElement","setAttribute","appendChild","remove","id","Container","Row","rootElement","createRoot"],"mappings":"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","file":"static/js/main.157f8e63.chunk.js","sourcesContent":["import { Fretboard, FretboardSystem } from \"@moonwave99/fretboard.js\";\n\nconst renderFretboard = ({\n  stringCount,\n  stringSet,\n  keyName,\n  scaleName,\n  triads,\n  sevenths\n}) => {\n  const fretCount = 12;\n  const baseTuning = [\"F#1\", \"B2\", \"E2\", \"A2\", \"D3\", \"G3\", \"B3\", \"E4\"];\n  // const tuning = [\"E2\", \"A2\", \"D3\", \"G3\", \"B3\", \"E4\"];\n\n  const tuning = baseTuning.slice(-Math.abs(stringCount));\n\n  const notes = [...new Set(Object.values({ ...triads, ...sevenths }).flat(1))];\n\n  const f = new Fretboard({\n    el: \"#fretboard\",\n    fretCount,\n    dotText: ({ note, interval }) => note + interval,\n    dotFill: ({ note }) => (notes.includes(note) ? \"red\" : \"white\"),\n    tuning,\n    stringCount: Number(stringCount)\n  });\n\n  const system = new FretboardSystem({ tuning, fretCount });\n\n  const scale = system.getScale({\n    type: scaleName,\n    root: keyName\n  });\n\n  f.setDots(scale.filter((s) => stringSet.includes(s.string)));\n  f.render();\n};\n\nexport default renderFretboard;\n","import Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n\nimport Col from \"react-bootstrap/Col\";\n\nconst StringCount = (props) => {\n  const options = [\"6\", \"7\", \"8\"];\n\n  return (\n    <Col xs={2}>\n      String Count\n      <Dropdown\n        options={options}\n        value={props.defaultOption}\n        onChange={({ value }) => props.onChange(value)}\n        placeholder=\"Select an option\"\n      />\n    </Col>\n  );\n};\n\nexport default StringCount;\n","import Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n\nimport { useState } from \"react\";\n\nimport Col from \"react-bootstrap/Col\";\n\nconst Key = (props) => {\n  const [flats, setFlats] = useState(false);\n\n  const sharpsOptions = [\n    \"A\",\n    \"A#\",\n    \"B\",\n    \"C\",\n    \"C#\",\n    \"D\",\n    \"D#\",\n    \"E\",\n    \"F\",\n    \"F#\",\n    \"G\",\n    \"G#\"\n  ];\n\n  const flatsOptions = [\n    \"A\",\n    \"Bb\",\n    \"B\",\n    \"C\",\n    \"Db\",\n    \"D\",\n    \"Eb\",\n    \"E\",\n    \"F\",\n    \"Gb\",\n    \"G\",\n    \"Ab\"\n  ];\n\n  return (\n    <Col xs={2}>\n      Key\n      <div className=\"float-end\">\n        <input\n          type=\"checkbox\"\n          checked={flats}\n          onChange={() => setFlats(!flats)}\n          style={{ marginRight: 5 }}\n        />\n        Flats\n      </div>\n      <Dropdown\n        options={flats ? flatsOptions : sharpsOptions}\n        value={props.defaultOption}\n        onChange={({ value }) => props.onChange(value)}\n        placeholder=\"Select an option\"\n      />\n    </Col>\n  );\n};\n\nexport default Key;\n","import Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport { ScaleType } from \"@tonaljs/tonal\";\n\nimport Col from \"react-bootstrap/Col\";\n\nconst Scale = (props) => {\n  const options = ScaleType.all()\n    .map((scaleType) => scaleType.name)\n    .filter((name) => ![\"major\"].includes(name))\n    .sort();\n\n  return (\n    <Col xs={2}>\n      Scale\n      <Dropdown\n        options={[\n          {\n            type: \"group\",\n            name: \"Common\",\n            items: [\n              { value: \"major\", label: \"major\" },\n              { value: \"minor\", label: \"minor\" }\n            ]\n          },\n          {\n            type: \"group\",\n            name: \"All\",\n            items: options\n          }\n        ]}\n        value={props.defaultOption}\n        onChange={({ value }) => props.onChange(value)}\n        placeholder=\"Select an option\"\n      />\n    </Col>\n  );\n};\n\nexport default Scale;\n","import Col from \"react-bootstrap/Col\";\n\nconst StringCount = (props) => {\n  const propagateOnChange = () => {\n    const values = [];\n    const checkboxes = document.querySelectorAll(\n      \"input[name=stringSet]:checked\"\n    );\n\n    for (var i = 0; i < checkboxes.length; i++) {\n      values.push(Number(checkboxes[i].value));\n    }\n\n    props.onChange(values);\n  };\n\n  const boxes = [];\n\n  for (let i = 1; i <= props.stringCount; i++) {\n    boxes.push(\n      <span style={{ marginRight: 5 }}>\n        <label style={{ textAlign: \"center\", display: \"inline-block\" }}>\n          <input\n            type=\"checkbox\"\n            name=\"stringSet\"\n            value={i}\n            onChange={propagateOnChange}\n            checked={props.stringSet.includes(i)}\n          />\n          <br />\n          {i}\n        </label>\n      </span>\n    );\n  }\n\n  return (\n    <Col xs={2}>\n      String Set\n      <div>{boxes}</div>\n    </Col>\n  );\n};\n\nexport default StringCount;\n","import Col from \"react-bootstrap/Col\";\nimport { Chord, Scale } from \"@tonaljs/tonal\";\n\nimport Table from \"react-bootstrap/Table\";\n\nconst Chords = ({\n  scaleName,\n  keyName,\n  triads,\n  sevenths,\n  onTriadChange,\n  onSeventhChange\n}) => {\n  const propagateOnChange = (onChange, chord, notes) => {\n    const obj = {};\n    obj[chord] = notes;\n\n    onChange(obj);\n  };\n\n  return (\n    <Col xs={12}>\n      <div className=\"text-center mt-4 mb-2\">Chords</div>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Function</th>\n            <th>Triad Chord</th>\n            <th>Notes</th>\n            <th>Seventh Chord</th>\n            <th>Notes</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Scale.modeNames(`${keyName} ${scaleName}`).map((s, i) => {\n            const notes = Scale.get(`${s[0]} ${s[1]}`).notes;\n            const triadNotes = notes.filter((e, i) => i % 2 === 0).slice(0, 3);\n            const seventhNotes = notes\n              .filter((e, i) => i % 2 === 0)\n              .slice(0, 4);\n\n            const triad = Chord.detect(triadNotes);\n            const seventh = Chord.detect(seventhNotes);\n\n            // const triadQuality = triad[0].replace(s[0], \"\");\n            // const seventhQuality = triad[0].replace(s[0], \"\");\n\n            // console.log(triad[0], Chord.get(triadQuality, s[0]).intervals);\n\n            return (\n              <tr>\n                <td>{i + 1}</td>\n                <td>\n                  {s[0]} {s[1]}\n                </td>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    name=\"triad\"\n                    value={triad[0]}\n                    onChange={() =>\n                      propagateOnChange(onTriadChange, triad[0], triadNotes)\n                    }\n                    checked={Object.keys(triads).includes(triad[0])}\n                  />\n                  {triad[0]}\n                </td>\n                <td>{triadNotes.join(\" \")}</td>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    name=\"seventh\"\n                    value={seventh[0]}\n                    onChange={() =>\n                      propagateOnChange(\n                        onSeventhChange,\n                        seventh[0],\n                        seventhNotes\n                      )\n                    }\n                    checked={Object.keys(sevenths).includes(seventh[0])}\n                  />\n                  {seventh[0]}\n                </td>\n                <td>{seventhNotes.join(\" \")}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </Col>\n  );\n};\n\nexport default Chords;\n","import \"./styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { useEffect, useReducer } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport renderFretboard from \"./fb\";\nimport StringCount from \"./stringCount\";\nimport Key from \"./key\";\nimport Scale from \"./scale\";\nimport StringSet from \"./stringSet\";\nimport Chords from \"./chords\";\n\nconst initialState = {\n  stringCount: \"6\",\n  keyName: \"G\",\n  scaleName: \"major\",\n  stringSet: [1, 2, 3, 4, 5, 6],\n  triads: {},\n  sevenths: {}\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"stringCount\":\n      const stringSet = [];\n      for (let i = 1; i <= action.payload; i++) {\n        stringSet.push(i);\n      }\n\n      return { ...state, stringCount: action.payload, stringSet: stringSet };\n    case \"stringSet\":\n      return { ...state, stringSet: action.payload };\n    case \"keyName\":\n      return { ...state, triads: {}, sevenths: {}, keyName: action.payload };\n    case \"scaleName\":\n      return { ...state, triads: {}, sevenths: {}, scaleName: action.payload };\n    case \"triads\":\n      let triads;\n      const triad = Object.keys(action.payload)[0];\n\n      if (Object.keys(state.triads).includes(triad)) {\n        triads = { ...state.triads };\n        delete triads[triad];\n        if (triads === undefined) {\n          triads = {};\n        }\n      } else {\n        triads = { ...state.triads, ...action.payload };\n      }\n      return { ...state, triads };\n    case \"sevenths\":\n      let sevenths;\n      const seventh = Object.keys(action.payload)[0];\n\n      if (Object.keys(state.sevenths).includes(seventh)) {\n        sevenths = { ...state.sevenths };\n        delete sevenths[seventh];\n        if (sevenths === undefined) {\n          sevenths = {};\n        }\n      } else {\n        sevenths = { ...state.sevenths, ...action.payload };\n      }\n      return { ...state, sevenths };\n    default:\n      throw new Error();\n  }\n}\n\nexport default function App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    const root = document.getElementById(\"fb-root\");\n    const fretboard = document.createElement(\"figure\");\n    fretboard.setAttribute(\"id\", \"fretboard\");\n    root.appendChild(fretboard);\n\n    renderFretboard(state);\n\n    return () => {\n      const element = document.getElementById(\"fretboard\");\n      element.remove();\n    };\n  }, [state]);\n\n  return (\n    <div className=\"App\">\n      <h1 style={{ textAlign: \"center\" }}>:)</h1>\n\n      <div id=\"fb-root\" />\n\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          <StringCount\n            defaultOption={initialState.stringCount}\n            onChange={(stringCount) =>\n              dispatch({ type: \"stringCount\", payload: stringCount })\n            }\n          />\n          <StringSet\n            stringCount={state.stringCount}\n            stringSet={state.stringSet}\n            onChange={(stringSet) =>\n              dispatch({ type: \"stringSet\", payload: stringSet })\n            }\n          />\n          <Key\n            defaultOption={initialState.keyName}\n            onChange={(keyName) =>\n              dispatch({ type: \"keyName\", payload: keyName })\n            }\n          />\n          <Scale\n            defaultOption={initialState.scaleName}\n            onChange={(scale) =>\n              dispatch({ type: \"scaleName\", payload: scale })\n            }\n          />\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Chords\n            {...state}\n            onTriadChange={(triads) =>\n              dispatch({ type: \"triads\", payload: triads })\n            }\n            onSeventhChange={(sevenths) =>\n              dispatch({ type: \"sevenths\", payload: sevenths })\n            }\n          />\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}